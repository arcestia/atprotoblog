{
  "version": 3,
  "sources": ["../../../src/app/routes/_index.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"src\\\\\\\\app\\\\\\\\routes\\\\\\\\_index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"src\\\\app\\\\routes\\\\_index.tsx\");\n  import.meta.hot.lastModified = \"1731649604524.3572\";\n}\n// REMIX HMR END\n\nimport React from 'react';\nimport { json } from '@remix-run/node';\nimport { getPosts, getProfile } from '../../atproto';\nimport { useLoaderData } from '@remix-run/react';\nexport const loader = async () => {\n  const posts = await getPosts(undefined);\n  const profile = await getProfile();\n  const postsFiltered = posts.filter(p => !p.content?.startsWith('NOT_LIVE'));\n  const postsShortened = postsFiltered.map(p => {\n    p.content = p.content?.slice(0, 300);\n    return p;\n  });\n  return json({\n    posts: postsShortened,\n    profile\n  });\n};\nexport const meta = () => {\n  return [{\n    title: \"It's Skiddle! \uD83D\uDC4B\"\n  }, {\n    name: 'description',\n    content: 'bluesky, generative artwork, machine learning, decentralized social media'\n  }];\n};\nexport default function Index() {\n  _s();\n  const {\n    posts,\n    profile\n  } = useLoaderData();\n  return <div className=\"container flex flex-col mx-auto pt-10 md:pt-20 pb-20 gap-10\">\r\n      <div className=\"flex-col text-center\">\r\n        <div className=\"flex flex-col md:flex-row justify-center items-center gap-4 md:gap-20 pb-4 md:pb-8\">\r\n          {profile ? <img className=\"rounded-full w-32 h-32\" src={profile.avatar} alt=\"Skiddle's avatar\" /> : <div className=\"w-32 h-32 bg-gray-300 rounded-full\"></div>}\r\n          <h1 className=\"text-5xl md:text-6xl font-bold\">It's Skiddle! \uD83D\uDC4B</h1>\r\n        </div>\r\n        <p className=\"text-2xl text-300\">javascript, ATProto, decentralized social media</p>\r\n      </div>\r\n      <div className=\"flex flex-col gap-4\">\r\n        <h2 className=\"text-3xl font-bold\">blog posts</h2>\r\n        <ul className=\"list-none\">\r\n          {posts?.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()).map(post => <PostItem post={post} key={post.rkey} />)}\r\n        </ul>\r\n      </div>\r\n    </div>;\n}\n_s(Index, \"RathzISvtlwTQfT1Mv4jL9VMfJ4=\", false, function () {\n  return [useLoaderData];\n});\n_c = Index;\nfunction PostItem({\n  post\n}) {\n  return <li>\r\n      <div className=\"flex\">\r\n        <p>\r\n          {new Date(post.createdAt).toLocaleDateString('en-US', {\n          year: '2-digit',\n          month: '2-digit',\n          day: '2-digit'\n        })}\r\n          &nbsp;&nbsp;&mdash;&nbsp;&nbsp;\r\n        </p>\r\n        <a className=\"font-bold hover:underline\" href={`/posts/${post.rkey}`}>\r\n          <h3 className=\"text-xl\"> {post.title}</h3>\r\n        </a>\r\n      </div>\r\n    </li>;\n}\n_c2 = PostItem;\nvar _c, _c2;\n$RefreshReg$(_c, \"Index\");\n$RefreshReg$(_c2, \"PostItem\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
